package view;

import controller.ProdutoController;
import controller.dao.util.StringUtil;
import controller.impl.ProdutoControllerImpl;
import controller.impl.RegraNegocioException;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Produto;
import net.sf.jasperreports.engine.JRException;
import view.util.ViewUtil;
import view.util.ViewUtil.GeradorNomePDF;

public class FrmConsultaProduto extends javax.swing.JDialog {

    private DefaultTableModel dtm;
    private Produto produto;
    private Produto produtoSelecionado;
    private List<Produto> listaProdutosBuscados;
    private ProdutoController produtoController = new ProdutoControllerImpl();

    public FrmConsultaProduto(java.awt.Frame parent, boolean modal, Produto usuarioSelecionado) {
        super(parent, modal);
        this.produtoSelecionado = usuarioSelecionado;
        listaProdutosBuscados = new ArrayList<Produto>();
        initComponents();
    }

    public void carregarUsuario() {
        produto = new Produto();
        if (!edDescricao.getText().isEmpty()) {
            produto.setDescricao(edDescricao.getText());
        }
        try {
            double valorInicial = StringUtil.getValorR$(edValorInicial.getText());
            double valorFinal = StringUtil.getValorR$(edValorFinal.getText());
            if (!edValorInicial.getText().isEmpty()) {
                produto.setValor(valorInicial);
            }
            try {
                listaProdutosBuscados = produtoController.listar(produto, valorFinal);
                carregarGrid();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Valor inv치lido.", "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void carregarGrid() {
        Vector<Vector> dados = new Vector<Vector>();

        for (Produto produto : listaProdutosBuscados) {
            Vector registroDb = new Vector();

            registroDb.add(produto.getReferencia());
            registroDb.add(produto.getCodigoBarrra());
            registroDb.add(produto.getDescricao());
            registroDb.add(StringUtil.getR$FormmatedFromDouble(produto.getValor()));

            dados.add(registroDb);
        }

        dtm = (DefaultTableModel) tabelaConsulta.getModel();
        dtm.setRowCount(0);

        for (Vector v : dados) {
            dtm.addRow(v);
        }
    }

    public void carregarEdicao() {
        try {
            if (tabelaConsulta.getSelectedRow() != -1) {
                setProdutoRetorno(listaProdutosBuscados.get(tabelaConsulta.getSelectedRow()));
                //telaPrincipal.editarCampos(transacaoSelecionada);
                this.dispose();
            } else {
                throw new RegraNegocioException("Favor selecionar um Produto.");
            }
        } catch (RegraNegocioException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void setProdutoRetorno(Produto produto) {
        produtoSelecionado.setCodigoBarrra(produto.getCodigoBarrra());
        produtoSelecionado.setDescricao(produto.getDescricao());
        produtoSelecionado.setReferencia(produto.getReferencia());
        produtoSelecionado.setValor(produto.getValor());
    }

    private void limpar() {
        edDescricao.setText("");
        edValorFinal.setText("9999999999,99");
        edValorInicial.setText("0,00");
        listaProdutosBuscados = new ArrayList<Produto>();

        dtm = new DefaultTableModel();
        dtm = (DefaultTableModel) tabelaConsulta.getModel();

        dtm.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cadastroAluno = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaConsulta = new javax.swing.JTable();
        btConfirma = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btPesquisar = new javax.swing.JButton();
        lbImg = new javax.swing.JLabel();
        lbCodigoIni = new javax.swing.JLabel();
        edCodigoIni = new javax.swing.JTextField();
        btGerarPDF = new javax.swing.JButton();
        lbNome = new javax.swing.JLabel();
        edNome = new javax.swing.JTextField();
        lbCPFCNPJ = new javax.swing.JLabel();
        edCPFCNPJ = new javax.swing.JTextField();
        lbCodigoFin = new javax.swing.JLabel();
        edCodigoFin = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cadastroAluno.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        cadastroAluno.setText("Consulta de Fornecedores");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tabelaConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo", "Nome", "CPF/CNPJ", "Telefone", "E-mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaConsulta.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaConsultaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaConsulta);
        tabelaConsulta.getColumnModel().getColumn(0).setPreferredWidth(10);
        tabelaConsulta.getColumnModel().getColumn(1).setPreferredWidth(80);
        tabelaConsulta.getColumnModel().getColumn(3).setPreferredWidth(70);
        tabelaConsulta.getColumnModel().getColumn(4).setPreferredWidth(70);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btConfirma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/confirma.png"))); // NOI18N
        btConfirma.setToolTipText("Confirma");
        btConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmaActionPerformed(evt);
            }
        });

        btSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sair.png"))); // NOI18N
        btSair.setToolTipText("Cancelar");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });
        btSair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btSairKeyPressed(evt);
            }
        });

        btLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpar.png"))); // NOI18N
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search-icon.png"))); // NOI18N
        btPesquisar.setToolTipText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        lbImg.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lbImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/motorista.png"))); // NOI18N

        lbCodigoIni.setText("C칩digo Inicial:");

        btGerarPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pdf_file.png"))); // NOI18N
        btGerarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGerarPDFActionPerformed(evt);
            }
        });

        lbNome.setText("Nome:");

        lbCPFCNPJ.setText("CPF/CNPJ:");

        lbCodigoFin.setText("C칩digo Final:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbImg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cadastroAluno)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbCodigoIni)
                                    .addComponent(lbNome))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(edNome)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(edCodigoIni, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 202, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbCPFCNPJ)
                                    .addComponent(lbCodigoFin))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(edCPFCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(edCodigoFin, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btSair)
                    .addComponent(btPesquisar)
                    .addComponent(btConfirma)
                    .addComponent(btLimpar)
                    .addComponent(btGerarPDF))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(cadastroAluno))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbImg)))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCodigoIni)
                    .addComponent(edCodigoIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCodigoFin)
                    .addComponent(edCodigoFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(edNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCPFCNPJ)
                    .addComponent(edCPFCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btConfirma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btGerarPDF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSair))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmaActionPerformed
        carregarEdicao();
    }//GEN-LAST:event_btConfirmaActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btSairActionPerformed

    private void btSairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btSairKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btSairKeyPressed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limpar();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        carregarUsuario();
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void btGerarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGerarPDFActionPerformed
        if (!listaProdutosBuscados.isEmpty()) {
            try {
                String path = null;
                try {
                    path = ViewUtil.createFileChooserToSavePDF(this, GeradorNomePDF.PRODUTO);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                }
                if (path != null) {
                    produtoController.gerarRelatorio(listaProdutosBuscados, path);
                    int abrir = JOptionPane.showConfirmDialog(null, "PDF Gerado Com Sucesso em '" + path + "'. \nDeseja abr칤-lo?", "Sucesso", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    if (abrir == JOptionPane.OK_OPTION) {
                        java.awt.Desktop.getDesktop().open(new File(path));
                    }
                }
            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao gerar relat칩rio, causa: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao abrir o arquivo, causa: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Necessita-se ao menos de um registro para gerar o PDF.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btGerarPDFActionPerformed

    private void tabelaConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaConsultaMouseClicked
        if (evt.getClickCount() == 2) {
            carregarEdicao();
        }
    }//GEN-LAST:event_tabelaConsultaMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConfirma;
    private javax.swing.JButton btGerarPDF;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btSair;
    private javax.swing.JLabel cadastroAluno;
    private javax.swing.JTextField edCPFCNPJ;
    private javax.swing.JTextField edCodigoFin;
    private javax.swing.JTextField edCodigoIni;
    private javax.swing.JTextField edNome;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCPFCNPJ;
    private javax.swing.JLabel lbCodigoFin;
    private javax.swing.JLabel lbCodigoIni;
    private javax.swing.JLabel lbImg;
    private javax.swing.JLabel lbNome;
    private javax.swing.JTable tabelaConsulta;
    // End of variables declaration//GEN-END:variables
}
